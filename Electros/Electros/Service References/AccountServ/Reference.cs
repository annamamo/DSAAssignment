//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1022
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Electros.AccountServ {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountServ.IAccountService")]
    public interface IAccountService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/getAccountByUsername", ReplyAction="http://tempuri.org/IAccountService/getAccountByUsernameResponse")]
        Common.Account getAccountByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Encrypt", ReplyAction="http://tempuri.org/IAccountService/EncryptResponse")]
        string Encrypt(string passpin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/isAuthenticatedValid", ReplyAction="http://tempuri.org/IAccountService/isAuthenticatedValidResponse")]
        bool isAuthenticatedValid(string username, int pin);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountServiceChannel : Electros.AccountServ.IAccountService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountServiceClient : System.ServiceModel.ClientBase<Electros.AccountServ.IAccountService>, Electros.AccountServ.IAccountService {
        
        public AccountServiceClient() {
        }
        
        public AccountServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Common.Account getAccountByUsername(string username) {
            return base.Channel.getAccountByUsername(username);
        }
        
        public string Encrypt(string passpin) {
            return base.Channel.Encrypt(passpin);
        }
        
        public bool isAuthenticatedValid(string username, int pin) {
            return base.Channel.isAuthenticatedValid(username, pin);
        }
    }
}
